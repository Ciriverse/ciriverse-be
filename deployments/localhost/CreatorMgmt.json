{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "AlreadyListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "donate",
          "type": "uint256"
        }
      ],
      "name": "AmountToLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoFunds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "NotListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "donator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Donate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "pic",
          "type": "string"
        }
      ],
      "name": "UserCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_MILESTONE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "addMilestone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "milestoneId",
          "type": "uint256"
        }
      ],
      "name": "afterMintMilestone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pic",
          "type": "string"
        }
      ],
      "name": "creatorRegister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "getCreator",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "pic",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "funds",
              "type": "uint256"
            }
          ],
          "internalType": "struct CreatorMgmt.Creator",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "getFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "milestoneId",
          "type": "uint256"
        }
      ],
      "name": "getTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "isCreator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "milestoneId",
          "type": "uint256"
        }
      ],
      "name": "isEligibleToMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "isLessMilestones",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pic",
          "type": "string"
        }
      ],
      "name": "updateProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x03835ec4189e92e1d9e58ef2d796fb50b99a86d53f71f688d08f0b11084e32b9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2316004",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xfa29f4fe8c408ab53250d2eed42c9132115ab98aa5548c2ec8c788778b800033",
    "transactionHash": "0x03835ec4189e92e1d9e58ef2d796fb50b99a86d53f71f688d08f0b11084e32b9",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2316004",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7c59c2295984a7c15f0fb7c02ced50c6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"AlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"donate\",\"type\":\"uint256\"}],\"name\":\"AmountToLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"NotListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Donate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pic\",\"type\":\"string\"}],\"name\":\"UserCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_MILESTONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"addMilestone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"milestoneId\",\"type\":\"uint256\"}],\"name\":\"afterMintMilestone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pic\",\"type\":\"string\"}],\"name\":\"creatorRegister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"getCreator\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pic\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"}],\"internalType\":\"struct CreatorMgmt.Creator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"getFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"milestoneId\",\"type\":\"uint256\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"isCreator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"milestoneId\",\"type\":\"uint256\"}],\"name\":\"isEligibleToMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"isLessMilestones\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pic\",\"type\":\"string\"}],\"name\":\"updateProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CreatorMgmt.sol\":\"CreatorMgmt\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/CreatorMgmt.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\nerror PriceNotMet(address nftAddress, uint256 tokenId, uint256 price);\\r\\nerror AmountToLow(address sender, address creator, uint256 donate);\\r\\nerror ItemNotForSale(address nftAddress, uint256 tokenId);\\r\\nerror NotListed(address creatorAddress);\\r\\nerror AlreadyListed(address creatorAddress);\\r\\nerror NoFunds();\\r\\nerror NotOwner();\\r\\nerror NotApprovedForMarketplace();\\r\\nerror PriceMustBeAboveZero();\\r\\n\\r\\ncontract CreatorMgmt is ReentrancyGuard {\\r\\n    struct Creator {\\r\\n        address addr;\\r\\n        string name;\\r\\n        string pic;\\r\\n        uint256 funds;\\r\\n    }\\r\\n\\r\\n    struct Milestone {\\r\\n        uint256 price;\\r\\n        address nftAddress;\\r\\n        uint256 tokenId;\\r\\n    }\\r\\n\\r\\n    struct MilestonePerDonator {\\r\\n        uint256 fund;\\r\\n        bool[5] status;\\r\\n    }\\r\\n\\r\\n    event UserCreated(address indexed creator, string name, string pic);\\r\\n\\r\\n    event Donate(\\r\\n        address indexed creator,\\r\\n        address indexed donator,\\r\\n        uint256 value\\r\\n    );\\r\\n\\r\\n    uint256 public constant MAX_MILESTONE = 5;\\r\\n\\r\\n    mapping(address => Creator) private s_creators;\\r\\n    mapping(address => Milestone[]) private s_milestoneArray;\\r\\n    mapping(address => mapping(address => MilestonePerDonator)) s_donators;\\r\\n\\r\\n    modifier notRegistered(address creatorAddress) {\\r\\n        Creator memory creator = s_creators[creatorAddress];\\r\\n        if (creator.addr != address(0)) {\\r\\n            revert AlreadyListed(creatorAddress);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegistered(address creatorAddress) {\\r\\n        Creator memory creator = s_creators[creatorAddress];\\r\\n        if (creator.addr == address(0)) {\\r\\n            revert NotListed(creatorAddress);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isOwner(\\r\\n        address nftAddress,\\r\\n        uint256 tokenId,\\r\\n        address creator\\r\\n    ) {\\r\\n        IERC721 nft = IERC721(nftAddress);\\r\\n        address owner = nft.ownerOf(tokenId);\\r\\n        if (creator != owner) {\\r\\n            revert NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // register as a creator\\r\\n    // TODO\\r\\n    // check if user already exist?\\r\\n    function creatorRegister(string calldata name, string calldata pic)\\r\\n        external\\r\\n        notRegistered(msg.sender)\\r\\n    {\\r\\n        s_creators[msg.sender] = Creator(msg.sender, name, pic, 0);\\r\\n        emit UserCreated(msg.sender, name, pic);\\r\\n    }\\r\\n\\r\\n    function updateProfile(string calldata name, string calldata pic)\\r\\n        external\\r\\n        isRegistered(msg.sender)\\r\\n    {\\r\\n        s_creators[msg.sender].name = name;\\r\\n        s_creators[msg.sender].pic = pic;\\r\\n        emit UserCreated(msg.sender, name, pic);\\r\\n    }\\r\\n\\r\\n    // gift creator a klay\\r\\n    function donate(address creator)\\r\\n        external\\r\\n        payable\\r\\n        isRegistered(creator)\\r\\n        nonReentrant\\r\\n    {\\r\\n        if (msg.value < 0.1 ether) {\\r\\n            revert AmountToLow(msg.sender, creator, msg.value);\\r\\n        }\\r\\n        s_creators[creator].funds += msg.value;\\r\\n        s_donators[msg.sender][creator].fund += msg.value;\\r\\n        uint256 milestoneCount = s_milestoneArray[creator].length;\\r\\n\\r\\n        if (milestoneCount > 0) {\\r\\n            for (uint256 i = 0; i < milestoneCount; i++) {\\r\\n                // check if donator reach the milestone?\\r\\n                // check if already marked true?\\r\\n                if (\\r\\n                    (s_donators[msg.sender][creator].fund >=\\r\\n                        s_milestoneArray[creator][i].price) &&\\r\\n                    s_donators[msg.sender][creator].status[i] == false\\r\\n                ) {\\r\\n                    s_donators[msg.sender][creator].status[i] = true;\\r\\n                    // check if donator already own?\\r\\n                    // if not own and eligible, send the NFTs\\r\\n                    // TODO comeback to this latter when we create NFT contract\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        emit Donate(creator, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function addMilestone(\\r\\n        address nftAddress,\\r\\n        uint256 tokenId,\\r\\n        uint256 price\\r\\n    )\\r\\n        external\\r\\n        isRegistered(msg.sender)\\r\\n        isOwner(nftAddress, tokenId, msg.sender)\\r\\n    {\\r\\n        // add milestone NFTs, check first if the sender registered, is actually own the NFT\\r\\n        // then check if not more than max milestones\\r\\n        require(\\r\\n            s_milestoneArray[msg.sender].length <= MAX_MILESTONE,\\r\\n            \\\"You reach limit of milestone\\\"\\r\\n        );\\r\\n        s_milestoneArray[msg.sender].push(\\r\\n            Milestone(price, nftAddress, tokenId)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /*\\r\\n     * @notice Method for withdrawing from donators\\r\\n     */\\r\\n    function withdrawFunds() external {\\r\\n        uint256 funds = s_creators[msg.sender].funds;\\r\\n        if (funds <= 0) {\\r\\n            revert NoFunds();\\r\\n        }\\r\\n        s_creators[msg.sender].funds = 0;\\r\\n        (bool success, ) = payable(msg.sender).call{value: funds}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function getFunds(address creator) external view returns (uint256) {\\r\\n        return s_creators[creator].funds;\\r\\n    }\\r\\n\\r\\n    function isLessMilestones(address creator) external view returns (bool) {\\r\\n        return s_milestoneArray[creator].length <= MAX_MILESTONE;\\r\\n    }\\r\\n\\r\\n    function isCreator(address creatorAddress) external view returns (bool) {\\r\\n        Creator memory creator = s_creators[creatorAddress];\\r\\n        if (creator.addr == address(0)) {\\r\\n            return false;\\r\\n        }\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function isEligibleToMint(address creatorAddress, uint256 milestoneId)\\r\\n        external\\r\\n        view\\r\\n        returns (bool)\\r\\n    {\\r\\n        if (\\r\\n            s_donators[msg.sender][creatorAddress].status[milestoneId] == true\\r\\n        ) {\\r\\n            return true;\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function getTokenId(address creator, uint256 milestoneId)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return s_milestoneArray[creator][milestoneId].tokenId;\\r\\n    }\\r\\n\\r\\n    function afterMintMilestone(address creator, uint256 milestoneId) external {\\r\\n        s_donators[msg.sender][creator].status[milestoneId] = false;\\r\\n    }\\r\\n\\r\\n    function getCreator(address creator)\\r\\n        external\\r\\n        view\\r\\n        returns (Creator memory)\\r\\n    {\\r\\n        s_creators[creator];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x336586c26a99be30c93ab7c20a652a4c6f9a6f0db6af0d186d1297484d8eb3e4\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060016000819055506128a2806100286000396000f3fe6080604052600436106100c15760003560e01c806396821fc11161007f578063c9d3cc6a11610059578063c9d3cc6a1461026a578063d5b4959a14610293578063decebbce146102bc578063efd46065146102f9576100c1565b806396821fc1146101d9578063a021030914610204578063a4b25ffb14610241576100c1565b8062362a95146100c6578063095acc58146100e257806324600fc31461011f57806329f99b9f1461013657806340c77bf5146101735780638b673332146101b0575b600080fd5b6100e060048036038101906100db9190611d7f565b610336565b005b3480156100ee57600080fd5b5061010960048036038101906101049190611d7f565b610a41565b6040516101169190611dc7565b60405180910390f35b34801561012b57600080fd5b50610134610a91565b005b34801561014257600080fd5b5061015d60048036038101906101589190611e18565b610c0a565b60405161016a9190611e67565b60405180910390f35b34801561017f57600080fd5b5061019a60048036038101906101959190611e18565b610c77565b6040516101a79190611dc7565b60405180910390f35b3480156101bc57600080fd5b506101d760048036038101906101d29190611e82565b610d3f565b005b3480156101e557600080fd5b506101ee6111fa565b6040516101fb9190611e67565b60405180910390f35b34801561021057600080fd5b5061022b60048036038101906102269190611d7f565b6111ff565b6040516102389190611fed565b60405180910390f35b34801561024d57600080fd5b5061026860048036038101906102639190611e18565b61124c565b005b34801561027657600080fd5b50610291600480360381019061028c9190612074565b611302565b005b34801561029f57600080fd5b506102ba60048036038101906102b59190612074565b61164a565b005b3480156102c857600080fd5b506102e360048036038101906102de9190611d7f565b611a6d565b6040516102f09190611e67565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b9190611d7f565b611ab9565b60405161032d9190611dc7565b60405180910390f35b806000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546103e990612124565b80601f016020809104026020016040519081016040528092919081815260200182805461041590612124565b80156104625780601f1061043757610100808354040283529160200191610462565b820191906000526020600020905b81548152906001019060200180831161044557829003601f168201915b5050505050815260200160028201805461047b90612124565b80601f01602080910402602001604051908101604052809291908181526020018280546104a790612124565b80156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361057e57816040517f5d35c4290000000000000000000000000000000000000000000000000000000081526004016105759190612164565b60405180910390fd5b6002600054036105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba906121dc565b60405180910390fd5b600260008190555067016345785d8a000034101561061c573383346040517f9d60dc68000000000000000000000000000000000000000000000000000000008152600401610613939291906121fc565b60405180910390fd5b34600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461066e9190612262565b9250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546107049190612262565b925050819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008111156109ce5760005b818110156109cc57600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106107b7576107b6612296565b5b906000526020600020906003020160000154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410158015610901575060001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182600581106108e7576108e6612296565b5b602091828204019190069054906101000a900460ff161515145b156109b9576001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101826005811061099957610998612296565b5b602091828204019190066101000a81548160ff0219169083151502179055505b80806109c4906122c5565b91505061075e565b505b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f88dcaca629d63d86330e97adc358b13dd0ebd703239aea96b7ea2fb331b16f4e34604051610a2b9190611e67565b60405180910390a3506001600081905550505050565b60006005600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011159050919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154905060008111610b12576040517f43f9e11000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610b809061233e565b60006040518083038185875af1925050503d8060008114610bbd576040519150601f19603f3d011682016040523d82523d6000602084013e610bc2565b606091505b5050905080610c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfd9061239f565b60405180910390fd5b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c5d57610c5c612296565b5b906000526020600020906003020160020154905092915050565b600060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018360058110610d0e57610d0d612296565b5b602091828204019190069054906101000a900460ff16151503610d345760019050610d39565b600090505b92915050565b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610df290612124565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1e90612124565b8015610e6b5780601f10610e4057610100808354040283529160200191610e6b565b820191906000526020600020905b815481529060010190602001808311610e4e57829003601f168201915b50505050508152602001600282018054610e8490612124565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb090612124565b8015610efd5780601f10610ed257610100808354040283529160200191610efd565b820191906000526020600020905b815481529060010190602001808311610ee057829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1603610f8757816040517f5d35c429000000000000000000000000000000000000000000000000000000008152600401610f7e9190612164565b60405180910390fd5b848433600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610fca9190611e67565b602060405180830381865afa158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b91906123d4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611072576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011156110f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ef9061244d565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052808a81526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b81525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155505050505050505050505050565b600581565b611207611cd9565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182600581106112df576112de612296565b5b602091828204019190066101000a81548160ff0219169083151502179055505050565b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546113b590612124565b80601f01602080910402602001604051908101604052809291908181526020018280546113e190612124565b801561142e5780601f106114035761010080835404028352916020019161142e565b820191906000526020600020905b81548152906001019060200180831161141157829003601f168201915b5050505050815260200160028201805461144790612124565b80601f016020809104026020016040519081016040528092919081815260200182805461147390612124565b80156114c05780601f10611495576101008083540402835291602001916114c0565b820191906000526020600020905b8154815290600101906020018083116114a357829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361154a57816040517f5d35c4290000000000000000000000000000000000000000000000000000000081526004016115419190612164565b60405180910390fd5b8585600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101918261159b929190612653565b508383600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020191826115ed929190612653565b503373ffffffffffffffffffffffffffffffffffffffff167fa2e1d286e25c6fce64acccdfd7a54d53cce2f617ddff648ab1dbb3458ccdd95b8787878760405161163a949392919061275f565b60405180910390a2505050505050565b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546116fd90612124565b80601f016020809104026020016040519081016040528092919081815260200182805461172990612124565b80156117765780601f1061174b57610100808354040283529160200191611776565b820191906000526020600020905b81548152906001019060200180831161175957829003601f168201915b5050505050815260200160028201805461178f90612124565b80601f01602080910402602001604051908101604052809291908181526020018280546117bb90612124565b80156118085780601f106117dd57610100808354040283529160200191611808565b820191906000526020600020905b8154815290600101906020018083116117eb57829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461189257816040517f19cd45950000000000000000000000000000000000000000000000000000000081526004016118899190612164565b60405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016000815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816119ed919061279a565b506040820151816002019081611a03919061279a565b50606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff167fa2e1d286e25c6fce64acccdfd7a54d53cce2f617ddff648ab1dbb3458ccdd95b87878787604051611a5d949392919061275f565b60405180910390a2505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050919050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054611b6c90612124565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9890612124565b8015611be55780601f10611bba57610100808354040283529160200191611be5565b820191906000526020600020905b815481529060010190602001808311611bc857829003601f168201915b50505050508152602001600282018054611bfe90612124565b80601f0160208091040260200160405190810160405280929190818152602001828054611c2a90612124565b8015611c775780601f10611c4c57610100808354040283529160200191611c77565b820191906000526020600020905b815481529060010190602001808311611c5a57829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1603611cce576000915050611cd4565b60019150505b919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081525090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d4c82611d21565b9050919050565b611d5c81611d41565b8114611d6757600080fd5b50565b600081359050611d7981611d53565b92915050565b600060208284031215611d9557611d94611d17565b5b6000611da384828501611d6a565b91505092915050565b60008115159050919050565b611dc181611dac565b82525050565b6000602082019050611ddc6000830184611db8565b92915050565b6000819050919050565b611df581611de2565b8114611e0057600080fd5b50565b600081359050611e1281611dec565b92915050565b60008060408385031215611e2f57611e2e611d17565b5b6000611e3d85828601611d6a565b9250506020611e4e85828601611e03565b9150509250929050565b611e6181611de2565b82525050565b6000602082019050611e7c6000830184611e58565b92915050565b600080600060608486031215611e9b57611e9a611d17565b5b6000611ea986828701611d6a565b9350506020611eba86828701611e03565b9250506040611ecb86828701611e03565b9150509250925092565b611ede81611d41565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f1e578082015181840152602081019050611f03565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f4682611ee4565b611f508185611eef565b9350611f60818560208601611f00565b611f6981611f2a565b840191505092915050565b611f7d81611de2565b82525050565b6000608083016000830151611f9b6000860182611ed5565b5060208301518482036020860152611fb38282611f3b565b91505060408301518482036040860152611fcd8282611f3b565b9150506060830151611fe26060860182611f74565b508091505092915050565b600060208201905081810360008301526120078184611f83565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126120345761203361200f565b5b8235905067ffffffffffffffff81111561205157612050612014565b5b60208301915083600182028301111561206d5761206c612019565b5b9250929050565b6000806000806040858703121561208e5761208d611d17565b5b600085013567ffffffffffffffff8111156120ac576120ab611d1c565b5b6120b88782880161201e565b9450945050602085013567ffffffffffffffff8111156120db576120da611d1c565b5b6120e78782880161201e565b925092505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061213c57607f821691505b60208210810361214f5761214e6120f5565b5b50919050565b61215e81611d41565b82525050565b60006020820190506121796000830184612155565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006121c6601f8361217f565b91506121d182612190565b602082019050919050565b600060208201905081810360008301526121f5816121b9565b9050919050565b60006060820190506122116000830186612155565b61221e6020830185612155565b61222b6040830184611e58565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061226d82611de2565b915061227883611de2565b92508282019050808211156122905761228f612233565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006122d082611de2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361230257612301612233565b5b600182019050919050565b600081905092915050565b50565b600061232860008361230d565b915061233382612318565b600082019050919050565b60006123498261231b565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000612389600f8361217f565b915061239482612353565b602082019050919050565b600060208201905081810360008301526123b88161237c565b9050919050565b6000815190506123ce81611d53565b92915050565b6000602082840312156123ea576123e9611d17565b5b60006123f8848285016123bf565b91505092915050565b7f596f75207265616368206c696d6974206f66206d696c6573746f6e6500000000600082015250565b6000612437601c8361217f565b915061244282612401565b602082019050919050565b600060208201905081810360008301526124668161242a565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026125097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826124cc565b61251386836124cc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061255061254b61254684611de2565b61252b565b611de2565b9050919050565b6000819050919050565b61256a83612535565b61257e61257682612557565b8484546124d9565b825550505050565b600090565b612593612586565b61259e818484612561565b505050565b5b818110156125c2576125b760008261258b565b6001810190506125a4565b5050565b601f821115612607576125d8816124a7565b6125e1846124bc565b810160208510156125f0578190505b6126046125fc856124bc565b8301826125a3565b50505b505050565b600082821c905092915050565b600061262a6000198460080261260c565b1980831691505092915050565b60006126438383612619565b9150826002028217905092915050565b61265d838361246d565b67ffffffffffffffff81111561267657612675612478565b5b6126808254612124565b61268b8282856125c6565b6000601f8311600181146126ba57600084156126a8578287013590505b6126b28582612637565b86555061271a565b601f1984166126c8866124a7565b60005b828110156126f0578489013582556001820191506020850194506020810190506126cb565b8683101561270d5784890135612709601f891682612619565b8355505b6001600288020188555050505b50505050505050565b82818337600083830152505050565b600061273e838561217f565b935061274b838584612723565b61275483611f2a565b840190509392505050565b6000604082019050818103600083015261277a818688612732565b9050818103602083015261278f818486612732565b905095945050505050565b6127a382611ee4565b67ffffffffffffffff8111156127bc576127bb612478565b5b6127c68254612124565b6127d18282856125c6565b600060209050601f83116001811461280457600084156127f2578287015190505b6127fc8582612637565b865550612864565b601f198416612812866124a7565b60005b8281101561283a57848901518255600182019150602085019450602081019050612815565b868310156128575784890151612853601f891682612619565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220365368706374be0b76a692771acd4ab35fe6771b1c8a72f71dea8dcdc3f41dad64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100c15760003560e01c806396821fc11161007f578063c9d3cc6a11610059578063c9d3cc6a1461026a578063d5b4959a14610293578063decebbce146102bc578063efd46065146102f9576100c1565b806396821fc1146101d9578063a021030914610204578063a4b25ffb14610241576100c1565b8062362a95146100c6578063095acc58146100e257806324600fc31461011f57806329f99b9f1461013657806340c77bf5146101735780638b673332146101b0575b600080fd5b6100e060048036038101906100db9190611d7f565b610336565b005b3480156100ee57600080fd5b5061010960048036038101906101049190611d7f565b610a41565b6040516101169190611dc7565b60405180910390f35b34801561012b57600080fd5b50610134610a91565b005b34801561014257600080fd5b5061015d60048036038101906101589190611e18565b610c0a565b60405161016a9190611e67565b60405180910390f35b34801561017f57600080fd5b5061019a60048036038101906101959190611e18565b610c77565b6040516101a79190611dc7565b60405180910390f35b3480156101bc57600080fd5b506101d760048036038101906101d29190611e82565b610d3f565b005b3480156101e557600080fd5b506101ee6111fa565b6040516101fb9190611e67565b60405180910390f35b34801561021057600080fd5b5061022b60048036038101906102269190611d7f565b6111ff565b6040516102389190611fed565b60405180910390f35b34801561024d57600080fd5b5061026860048036038101906102639190611e18565b61124c565b005b34801561027657600080fd5b50610291600480360381019061028c9190612074565b611302565b005b34801561029f57600080fd5b506102ba60048036038101906102b59190612074565b61164a565b005b3480156102c857600080fd5b506102e360048036038101906102de9190611d7f565b611a6d565b6040516102f09190611e67565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b9190611d7f565b611ab9565b60405161032d9190611dc7565b60405180910390f35b806000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546103e990612124565b80601f016020809104026020016040519081016040528092919081815260200182805461041590612124565b80156104625780601f1061043757610100808354040283529160200191610462565b820191906000526020600020905b81548152906001019060200180831161044557829003601f168201915b5050505050815260200160028201805461047b90612124565b80601f01602080910402602001604051908101604052809291908181526020018280546104a790612124565b80156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361057e57816040517f5d35c4290000000000000000000000000000000000000000000000000000000081526004016105759190612164565b60405180910390fd5b6002600054036105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba906121dc565b60405180910390fd5b600260008190555067016345785d8a000034101561061c573383346040517f9d60dc68000000000000000000000000000000000000000000000000000000008152600401610613939291906121fc565b60405180910390fd5b34600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461066e9190612262565b9250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546107049190612262565b925050819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008111156109ce5760005b818110156109cc57600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106107b7576107b6612296565b5b906000526020600020906003020160000154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410158015610901575060001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182600581106108e7576108e6612296565b5b602091828204019190069054906101000a900460ff161515145b156109b9576001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101826005811061099957610998612296565b5b602091828204019190066101000a81548160ff0219169083151502179055505b80806109c4906122c5565b91505061075e565b505b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f88dcaca629d63d86330e97adc358b13dd0ebd703239aea96b7ea2fb331b16f4e34604051610a2b9190611e67565b60405180910390a3506001600081905550505050565b60006005600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011159050919050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154905060008111610b12576040517f43f9e11000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610b809061233e565b60006040518083038185875af1925050503d8060008114610bbd576040519150601f19603f3d011682016040523d82523d6000602084013e610bc2565b606091505b5050905080610c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfd9061239f565b60405180910390fd5b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c5d57610c5c612296565b5b906000526020600020906003020160020154905092915050565b600060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018360058110610d0e57610d0d612296565b5b602091828204019190069054906101000a900460ff16151503610d345760019050610d39565b600090505b92915050565b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610df290612124565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1e90612124565b8015610e6b5780601f10610e4057610100808354040283529160200191610e6b565b820191906000526020600020905b815481529060010190602001808311610e4e57829003601f168201915b50505050508152602001600282018054610e8490612124565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb090612124565b8015610efd5780601f10610ed257610100808354040283529160200191610efd565b820191906000526020600020905b815481529060010190602001808311610ee057829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1603610f8757816040517f5d35c429000000000000000000000000000000000000000000000000000000008152600401610f7e9190612164565b60405180910390fd5b848433600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610fca9190611e67565b602060405180830381865afa158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b91906123d4565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611072576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011156110f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ef9061244d565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052808a81526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b81525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155505050505050505050505050565b600581565b611207611cd9565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182600581106112df576112de612296565b5b602091828204019190066101000a81548160ff0219169083151502179055505050565b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546113b590612124565b80601f01602080910402602001604051908101604052809291908181526020018280546113e190612124565b801561142e5780601f106114035761010080835404028352916020019161142e565b820191906000526020600020905b81548152906001019060200180831161141157829003601f168201915b5050505050815260200160028201805461144790612124565b80601f016020809104026020016040519081016040528092919081815260200182805461147390612124565b80156114c05780601f10611495576101008083540402835291602001916114c0565b820191906000526020600020905b8154815290600101906020018083116114a357829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff160361154a57816040517f5d35c4290000000000000000000000000000000000000000000000000000000081526004016115419190612164565b60405180910390fd5b8585600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101918261159b929190612653565b508383600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020191826115ed929190612653565b503373ffffffffffffffffffffffffffffffffffffffff167fa2e1d286e25c6fce64acccdfd7a54d53cce2f617ddff648ab1dbb3458ccdd95b8787878760405161163a949392919061275f565b60405180910390a2505050505050565b336000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546116fd90612124565b80601f016020809104026020016040519081016040528092919081815260200182805461172990612124565b80156117765780601f1061174b57610100808354040283529160200191611776565b820191906000526020600020905b81548152906001019060200180831161175957829003601f168201915b5050505050815260200160028201805461178f90612124565b80601f01602080910402602001604051908101604052809291908181526020018280546117bb90612124565b80156118085780601f106117dd57610100808354040283529160200191611808565b820191906000526020600020905b8154815290600101906020018083116117eb57829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461189257816040517f19cd45950000000000000000000000000000000000000000000000000000000081526004016118899190612164565b60405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016000815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816119ed919061279a565b506040820151816002019081611a03919061279a565b50606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff167fa2e1d286e25c6fce64acccdfd7a54d53cce2f617ddff648ab1dbb3458ccdd95b87878787604051611a5d949392919061275f565b60405180910390a2505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050919050565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054611b6c90612124565b80601f0160208091040260200160405190810160405280929190818152602001828054611b9890612124565b8015611be55780601f10611bba57610100808354040283529160200191611be5565b820191906000526020600020905b815481529060010190602001808311611bc857829003601f168201915b50505050508152602001600282018054611bfe90612124565b80601f0160208091040260200160405190810160405280929190818152602001828054611c2a90612124565b8015611c775780601f10611c4c57610100808354040283529160200191611c77565b820191906000526020600020905b815481529060010190602001808311611c5a57829003601f168201915b505050505081526020016003820154815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1603611cce576000915050611cd4565b60019150505b919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600081525090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d4c82611d21565b9050919050565b611d5c81611d41565b8114611d6757600080fd5b50565b600081359050611d7981611d53565b92915050565b600060208284031215611d9557611d94611d17565b5b6000611da384828501611d6a565b91505092915050565b60008115159050919050565b611dc181611dac565b82525050565b6000602082019050611ddc6000830184611db8565b92915050565b6000819050919050565b611df581611de2565b8114611e0057600080fd5b50565b600081359050611e1281611dec565b92915050565b60008060408385031215611e2f57611e2e611d17565b5b6000611e3d85828601611d6a565b9250506020611e4e85828601611e03565b9150509250929050565b611e6181611de2565b82525050565b6000602082019050611e7c6000830184611e58565b92915050565b600080600060608486031215611e9b57611e9a611d17565b5b6000611ea986828701611d6a565b9350506020611eba86828701611e03565b9250506040611ecb86828701611e03565b9150509250925092565b611ede81611d41565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f1e578082015181840152602081019050611f03565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f4682611ee4565b611f508185611eef565b9350611f60818560208601611f00565b611f6981611f2a565b840191505092915050565b611f7d81611de2565b82525050565b6000608083016000830151611f9b6000860182611ed5565b5060208301518482036020860152611fb38282611f3b565b91505060408301518482036040860152611fcd8282611f3b565b9150506060830151611fe26060860182611f74565b508091505092915050565b600060208201905081810360008301526120078184611f83565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126120345761203361200f565b5b8235905067ffffffffffffffff81111561205157612050612014565b5b60208301915083600182028301111561206d5761206c612019565b5b9250929050565b6000806000806040858703121561208e5761208d611d17565b5b600085013567ffffffffffffffff8111156120ac576120ab611d1c565b5b6120b88782880161201e565b9450945050602085013567ffffffffffffffff8111156120db576120da611d1c565b5b6120e78782880161201e565b925092505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061213c57607f821691505b60208210810361214f5761214e6120f5565b5b50919050565b61215e81611d41565b82525050565b60006020820190506121796000830184612155565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006121c6601f8361217f565b91506121d182612190565b602082019050919050565b600060208201905081810360008301526121f5816121b9565b9050919050565b60006060820190506122116000830186612155565b61221e6020830185612155565b61222b6040830184611e58565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061226d82611de2565b915061227883611de2565b92508282019050808211156122905761228f612233565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006122d082611de2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361230257612301612233565b5b600182019050919050565b600081905092915050565b50565b600061232860008361230d565b915061233382612318565b600082019050919050565b60006123498261231b565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000612389600f8361217f565b915061239482612353565b602082019050919050565b600060208201905081810360008301526123b88161237c565b9050919050565b6000815190506123ce81611d53565b92915050565b6000602082840312156123ea576123e9611d17565b5b60006123f8848285016123bf565b91505092915050565b7f596f75207265616368206c696d6974206f66206d696c6573746f6e6500000000600082015250565b6000612437601c8361217f565b915061244282612401565b602082019050919050565b600060208201905081810360008301526124668161242a565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026125097fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826124cc565b61251386836124cc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061255061254b61254684611de2565b61252b565b611de2565b9050919050565b6000819050919050565b61256a83612535565b61257e61257682612557565b8484546124d9565b825550505050565b600090565b612593612586565b61259e818484612561565b505050565b5b818110156125c2576125b760008261258b565b6001810190506125a4565b5050565b601f821115612607576125d8816124a7565b6125e1846124bc565b810160208510156125f0578190505b6126046125fc856124bc565b8301826125a3565b50505b505050565b600082821c905092915050565b600061262a6000198460080261260c565b1980831691505092915050565b60006126438383612619565b9150826002028217905092915050565b61265d838361246d565b67ffffffffffffffff81111561267657612675612478565b5b6126808254612124565b61268b8282856125c6565b6000601f8311600181146126ba57600084156126a8578287013590505b6126b28582612637565b86555061271a565b601f1984166126c8866124a7565b60005b828110156126f0578489013582556001820191506020850194506020810190506126cb565b8683101561270d5784890135612709601f891682612619565b8355505b6001600288020188555050505b50505050505050565b82818337600083830152505050565b600061273e838561217f565b935061274b838584612723565b61275483611f2a565b840190509392505050565b6000604082019050818103600083015261277a818688612732565b9050818103602083015261278f818486612732565b905095945050505050565b6127a382611ee4565b67ffffffffffffffff8111156127bc576127bb612478565b5b6127c68254612124565b6127d18282856125c6565b600060209050601f83116001811461280457600084156127f2578287015190505b6127fc8582612637565b865550612864565b601f198416612812866124a7565b60005b8281101561283a57848901518255600182019150602085019450602081019050612815565b868310156128575784890151612853601f891682612619565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220365368706374be0b76a692771acd4ab35fe6771b1c8a72f71dea8dcdc3f41dad64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 2074,
        "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
        "label": "s_creators",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Creator)2036_storage)"
      },
      {
        "astId": 2080,
        "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
        "label": "s_milestoneArray",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(Milestone)2043_storage)dyn_storage)"
      },
      {
        "astId": 2087,
        "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
        "label": "s_donators",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(MilestonePerDonator)2050_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bool)5_storage": {
        "base": "t_bool",
        "encoding": "inplace",
        "label": "bool[5]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Milestone)2043_storage)dyn_storage": {
        "base": "t_struct(Milestone)2043_storage",
        "encoding": "dynamic_array",
        "label": "struct CreatorMgmt.Milestone[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(Milestone)2043_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CreatorMgmt.Milestone[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Milestone)2043_storage)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(MilestonePerDonator)2050_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct CreatorMgmt.MilestonePerDonator))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(MilestonePerDonator)2050_storage)"
      },
      "t_mapping(t_address,t_struct(Creator)2036_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CreatorMgmt.Creator)",
        "numberOfBytes": "32",
        "value": "t_struct(Creator)2036_storage"
      },
      "t_mapping(t_address,t_struct(MilestonePerDonator)2050_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CreatorMgmt.MilestonePerDonator)",
        "numberOfBytes": "32",
        "value": "t_struct(MilestonePerDonator)2050_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Creator)2036_storage": {
        "encoding": "inplace",
        "label": "struct CreatorMgmt.Creator",
        "members": [
          {
            "astId": 2029,
            "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2031,
            "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 2033,
            "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
            "label": "pic",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 2035,
            "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
            "label": "funds",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Milestone)2043_storage": {
        "encoding": "inplace",
        "label": "struct CreatorMgmt.Milestone",
        "members": [
          {
            "astId": 2038,
            "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
            "label": "price",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2040,
            "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
            "label": "nftAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 2042,
            "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
            "label": "tokenId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(MilestonePerDonator)2050_storage": {
        "encoding": "inplace",
        "label": "struct CreatorMgmt.MilestonePerDonator",
        "members": [
          {
            "astId": 2045,
            "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
            "label": "fund",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2049,
            "contract": "contracts/CreatorMgmt.sol:CreatorMgmt",
            "label": "status",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bool)5_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}